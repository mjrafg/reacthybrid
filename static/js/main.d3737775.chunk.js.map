{"version":3,"sources":["utilities/Statics.js","services/Services.js","utilities/types.js","store/actions/loadingActions.js","store/actions/messageActions.js","components/layout/Message.js","components/auth/SignIn.js","store/actions/authActions.js","components/auth/SignUp.js","components/auth/Register.js","components/layout/Loading.js","components/dashboard/Dashboard.js","store/actions/cartableActions.js","components/layout/PagesToolbar.js","components/cartable/Cartable.js","store/actions/reportActions.js","components/report/ReportMenu.js","components/layout/Input.js","components/layout/ChartView.js","components/report/ReportLayout.js","store/actions/messageModalActions.js","components/layout/UnComfirmedRequest.js","components/layout/ModalMessage.js","components/cartable/UnComfirmedRequests.js","components/layout/UnComfirmedDetailRequest.js","components/cartable/UnComfirmedDetailRequests.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/loadingReducer.js","store/reducers/messageReducer.js","store/reducers/messageModalReducer.js","store/reducers/cartableReducer.js","store/reducers/reportReducer.js","store/reducers/rootReducer.js","index.js"],"names":["BaseUrl","SERVER_CONNECTION_FAILUR_MESSAGE","APP_SIGNIN_ROUTE","APP_CARTABLE_ROUTE","APP_REPORT_ROUTE","APP_REPORT_LAYOUT_ROUTE","APP_UNCOMFIRMED_REQUESTS_ROUTE","PostData","route","userData","headers","allHeaders","Object","objectSpread","Content-Type","Promise","resolve","reject","fetch","method","body","JSON","stringify","then","response","ok","json","Error","responseJson","catch","error","goToLogin","history","replace","setData","data","obj","keys","key","push","getKeys","forEach","localStorage","setItem","getData","getItem","ResponseCode","RegistrationTypes","InputType","ReportTypes","ColumnChart","type","urlRoute","PieChart","GaugeChart","DonutChart","ListViewChart","setLoading","loadingState","payload","showMessage","MessageState","messageShowFirst","messageShow","Message","_this$props","this","props","message","typeClassName","displayClassName","display","react_default","a","createElement","Fragment","className","Component","SignIn","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","checked","setState","defineProperty","handleSubmit","state","userName","onHideMessage","password","rememberMe","onSignIn","onShowMessage","messageType","onKillMessage","alt","src","onChange","id","htmlFor","react_router_dom","to","pathname","onClick","defaultValue","layout_Message","connect","dispatch","credential","credentials","loading","md5Password","md5","UserName","Password","Response","code","console","log","UserInfo","setTimeout","onSetMessage","setMessage","mobileNumber","onCheckMobile","MobileNo","Type","location","style","height","placeholder","goBack","params","checkMobile","Register","securityCode","length","onValidateSecurityCode","Value","validateSecurityCode","Loading","color","background","width","zIndex","opacity","position","top","left","transform","textAlign","direction","padding","loadingTitle","loadingMessage","Dashboard","setCartable","cartable","setUnComfirmedRequests","unComfirmedRequests","setUnComfirmedDetailRequests","unComfirmedDetailRequests","setComfirmedRequest","ComfirmedRequest","comfirmedRequest","PagesToolbar","onBackClick","title","Cartable","getImageSource","image","Image","handleMenuItemClick","item","menuType","menuID","caption","_props$match$params","match","onGetCartable","parent","_this2","layout_PagesToolbar","map","Parent","taraz-security-key","GetCartable","setReportMenu","reportMenu","clearReportLayout","setReportLayout","reportLayouts","ReportMenu","onGetReportMenu","report","GetReportMenu","Input","_Component","handleOnChange","inherits","createClass","lib","calendarStyles","calendarContainer","dayPickerContainer","monthsList","daysOfWeek","dayWrapper","selected","heading","next","prev","ChartView","findUrl","chart","url","reportType","concat","ID","showListView","isListView","listViewChart","listViewChartItems","listViewChartItemData","listViewChartItemDataColumns","isShowByDefault","keySpacePercent","isLoading","fontSize","listViewChartItem","index","borderBottom","index2","marginTop","marginBottom","ReportLayout","onGetReportLayout","reportID","onSetReportParameter","reportCharts","reportParameters","Input_Input","reportParameterType","handleOnParameterChange","bind","ChartView_ChartView","ReportID","GetReportLayout","setReportParameter","setMessageModal","UnComfirmedRequest","_this$props$item","requestHeaderSysID","docNumber","docDate","createDate","qty","price","creatorName","onDetailClicked","onSetSelectedUnComfirmedRequest","onSetMessageModal","messageModal","ModalState","selectedUnComfirmedRequest","setSelectedUnComfirmedRequest","ModalMessage","handleCloseButtonClick","onHideMessageModal","onKillMessageModal","onYesClicked","onYesClick","onNoClicked","onNoClick","_this$props$messageMo","modalDisplayClassName","modalContentDisplayClassName","modalContentPosition","bottom","UnComfirmedRequests","request","onComfirmRequest","onGetUnComfirmedRequests","layout_ModalMessage","layout_UnComfirmedRequest","MenuID","headerRows","GetUnComfirmedRequests","HeaderSysID","ComfirmRequest","acceptQty","rowNo","sysQty","itemName","onSetSelectedUnComfirmedDetailRequest","onComfirmClicked","selectedUnComfirmedDetailRequest","UnComfirmedDetailRequests","headerSysID","onComfirmDetailRequest","onGetUnComfirmedDetailRequests","UnComfirmedDetailRequest","detailRows","GetUnComfirmedDetailRequests","RowNo","AcceptQTY","ComfirmDetailRequest","App","react_router","render","_ref","layout_Loading","TransitionGroup","CSSTransition","timeout","classNames","exact","path","component","SignUp","APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","authReducer","arguments","undefined","newState","loadingReduscer","messageReduscer","messageModalReduscer","cartableReducer","splice","hasListView","itemSelected","rootResucer","combiner","loadingReducer","messageReducer","auth","cartbleReducer","messageModalReducer","reportReducer","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d3737775.chunk.js","sourcesContent":["//base webservice url\r\nexport const BaseUrl = 'http://192.168.1.120:3030/tarazhybrid/'\r\n\r\n//url routes\r\n//auth\r\nexport const LOGIN_ROUTE = 'umusers/loginapp'\r\nexport const CHECK_MOBILE_ROUTE = 'umusers/checkmobile'\r\nexport const SEND_CODE_ROUTE = 'umusers/register'\r\n//cartable\r\nexport const GET_CARTABLE_MENU_ROUTE = 'cartable/menus'\r\nexport const GET_UNCOMFIRMED_REQUESTS_ROUTE = 'cartable/menudata'\r\nexport const GET_UNCOMFIRMED_DETAIL_REQUESTS_ROUTE = 'cartable/MenuDetailData'\r\nexport const COMFIRM_REQUESTS_ROUTE = 'cartable/AcceptRequestHeader'\r\nexport const COMFIRM_DETAIL_REQUESTS_ROUTE = 'cartable/AcceptRequestDetail'\r\n//report\r\nexport const GET_REPORT_MENU_ROUTE = 'ReportAPI/ReportsMenus'\r\nexport const GET_REPORT_LAYOUT_ROUTE = 'ReportAPI/ReportLayout'\r\n//end of url routes\r\n\r\n//messages\r\nexport const SERVER_CONNECTION_FAILUR_MESSAGE='خطایی در ارتباط با سرور رخ داده است لطفا دوباره سعی کنید'\r\nexport const LOADING_DEFAULT_MESSAGE='در حال دریافت اطلاعات از سرور'\r\nexport const LOADING_DEFAULT_TITLE='لطفا منتظر بمانید'\r\n\r\n//app routes\r\nexport const APP_MAIN_ROUTE = '/'\r\nexport const APP_SIGNIN_ROUTE = '/signin'\r\nexport const APP_SIGNUP_ROUTE = '/signup'\r\nexport const APP_REGISTER_ROUTE = '/register'\r\nexport const APP_CARTABLE_ROUTE = '/cartable'\r\nexport const APP_REPORT_ROUTE = '/report'\r\nexport const APP_REPORT_LAYOUT_ROUTE = '/reportLayout'\r\nexport const APP_UNCOMFIRMED_REQUESTS_ROUTE = '/uncomfirmedrequests'\r\nexport const APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE = '/uncomfirmedrequestdetail'\r\n\r\n\r\n\r\n","import { BaseUrl,APP_MAIN_ROUTE,APP_SIGNIN_ROUTE,APP_SIGNUP_ROUTE,APP_REGISTER_ROUTE } from '../utilities/Statics'\r\nexport function PostData(route, userData, headers) {\r\n    let allHeaders = { ...headers, \"Content-Type\": \"application/json\" }\r\n    return new Promise((resolve, reject) => {\r\n        const url = BaseUrl + route;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n            headers: allHeaders\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('Something went wrong');\r\n                }\r\n            })\r\n            .then((responseJson) => {\r\n                resolve(responseJson)\r\n            }).catch((error) => {\r\n                reject(error)\r\n            })\r\n    })\r\n}\r\nexport function goToLogin(history)\r\n{\r\n    history.replace(APP_SIGNIN_ROUTE)\r\n}\r\nexport function setData(data) {\r\n    const allDataKeys = getKeys(data);\r\n    allDataKeys.forEach(key => {\r\n        localStorage.setItem(key,data[key])\r\n    })\r\n}\r\nexport function getData(key) {\r\n    return localStorage.getItem(key)\r\n}\r\nfunction getKeys(obj) {\r\n    var keys = [];\r\n    for (var key in obj) {\r\n        keys.push(key);\r\n    }\r\n    return keys;\r\n}\r\n","//for auth\r\nexport const AUTH_SIGNIN_STARTED = 'AUTH_SIGNIN_STARTED'\r\nexport const AUTH_SIGNIN_SUCCESS = 'AUTH_SIGNIN_SUCCESS'\r\nexport const AUTH_SIGNIN_FAILURE = 'AUTH_SIGNIN_FAILURE'\r\n\r\n//for loading\r\nexport const LOADING_SET = 'LOADING_SET'\r\n//for messageModal\r\nexport const MESSAGE_MODAL_SET = 'MESSAGE_MODAL_SET'\r\n//for message\r\nexport const MESSAGE_SET = 'MESSAGE_SET'\r\nexport const MESSAGE_SHOW = 'MESSAGE_SHOW'\r\nexport const MESSAGE_HIDE = 'MESSAGE_HIDE'\r\n//for cartable\r\nexport const CARTABLE_GET_SUCCESS = 'CARTABLE_GET_SUCCESS'\r\nexport const UNCOMFIRMED_REQUESTS_GET_SUCCESS = 'UNCOMFIRMED_REQUESTS_GET_SUCCESS'\r\nexport const UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS = 'UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS'\r\nexport const SET_SELECTED_UNCOMFIRMED_REQUEST = 'SET_SELECTED_UNCOMFIRMED_REQUEST'\r\nexport const SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST = 'SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST'\r\nexport const SET_COMFIRMED_REQUEST = 'SET_COMFIRMED_REQUEST'\r\nexport const SET_COMFIRMED_DETAIL_REQUEST = 'SET_COMFIRMED_DETAIL_REQUEST'\r\n//for report\r\nexport const REPORT_GET_SUCCESS = 'REPORT_GET_SUCCESS'\r\nexport const REPORT_LAYOUT_GET_SUCCESS = 'REPORT_LAYOUT_GET_SUCCESS'\r\nexport const REPORT_PARAMETER_LAYOUT_SET = 'REPORT_PARAMETER_LAYOUT_SET'\r\nexport const REPORT_LAYOUT_CLEAR = 'REPORT_LAYOUT_CLEAR'\r\n\r\n\r\n\r\n\r\n//statics types\r\nexport const ResponseCode = {\r\n    UserIsNotValid: 100,\r\n    Success: 200,\r\n    Duplicate: 300,\r\n    WrongCode: 400,\r\n    InternalError: 500,\r\n    SmsNotSend: 600,\r\n    WrongData: 700\r\n}\r\nexport const MessageTypes = {\r\n    error: \"error\",\r\n    success: \"success\",\r\n    warning: \"warning\"\r\n}\r\nexport const RegistrationTypes = {\r\n    registerMode: \"1\",\r\n    passwordRecoveryMode: \"2\"\r\n}\r\nexport const InputType = {\r\n    NumberBox: 1,\r\n    TextBox: 2,\r\n    DateBox: 3\r\n}\r\nexport const ReportTypes={\r\n    ColumnChart:{\r\n        type:1,\r\n        urlRoute:\"Reports/ColumnChartData\"\r\n    },\r\n    PieChart:{\r\n        type:2,\r\n        urlRoute:\"Reports/PieChartData\"\r\n    },\r\n    GaugeChart:{\r\n        type:3,\r\n        urlRoute:\"Reports/GaugeChartData\"\r\n    },\r\n    DonutChart:{\r\n        type:4,\r\n        urlRoute:\"Reports/DonutChartData\"\r\n    },\r\n    ListViewChart:{\r\n        type:5,\r\n        urlRoute:\"Reports/ListViewChartData\"\r\n    },\r\n}","import { LOADING_SET } from '../../utilities/types'\r\n\r\nexport const setLoading = (loadingState) => ({\r\n    type: LOADING_SET,\r\n    payload: {...loadingState}\r\n})\r\n\r\n","import { MESSAGE_SET } from '../../utilities/types'\r\n\r\nexport const setMessage = (MessageState) => ({\r\n    type: MESSAGE_SET,\r\n    payload: { ...MessageState }\r\n})\r\nexport const showMessage = (MessageState) => ({\r\n    type: MESSAGE_SET,\r\n    payload: { messageShowFirst: true, messageShow: true, ...MessageState }\r\n})\r\nexport const hideMessage = () => ({\r\n    type: MESSAGE_SET,\r\n    payload: { messageShow: false }\r\n})\r\nexport const killMessage = () => ({\r\n    type: MESSAGE_SET,\r\n    payload: { messageShow: false, messageShowFirst:false }\r\n})\r\n\r\n","import React, { Component } from 'react'\r\nclass Message extends Component {\r\n    render() {\r\n        const { type, message, display }=this.props\r\n        const typeClassName = \"message-\" + type\r\n        const displayClassName = \"message-\" + display\r\n        return (\r\n            <React.Fragment>\r\n                <div className={\"message \" + typeClassName + \" \" + displayClassName}>\r\n                    {message}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Message\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { setMessage, showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport { setData } from '../../services/Services';\r\nimport Message from '../layout/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { RegistrationTypes } from '../../utilities/types'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let userName = '', password = '';\r\n        const rememberMe = localStorage.getItem(\"rememberMe\");\r\n        if (rememberMe === \"true\") {\r\n            userName = localStorage.getItem('userName')\r\n            password = localStorage.getItem('password')\r\n        }\r\n        this.state = {\r\n            userName: userName,\r\n            password: password,\r\n            rememberMe: rememberMe === 'true' || !rememberMe,\r\n        }\r\n        this.props.onKillMessage()\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target;\r\n        if (type === \"checkbox\") {\r\n            this.setState({ [name]: checked })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value })\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        if (this.state.userName === \"\") {\r\n            this.props.onShowMessage({ message: \"نام کاربری را وارد کنید!\", messageType: \"warning\" })\r\n            return\r\n        }\r\n        else {\r\n            this.props.onHideMessage()\r\n        }\r\n        if (this.state.password === \"\") {\r\n            this.props.onShowMessage({ message: \"رمز عبور را وارد کنید!\", messageType: \"warning\" })\r\n            return\r\n        }\r\n        else {\r\n            this.props.onHideMessage()\r\n        }\r\n        if (this.state.rememberMe) {\r\n            setData(this.state)\r\n        }\r\n        else {\r\n            localStorage.setItem(\"rememberMe\", \"false\")\r\n            localStorage.setItem(\"userName\", \"\")\r\n            localStorage.setItem(\"password\", \"\")\r\n        }\r\n        this.props.onSignIn({ ...this.state, history: this.props.history })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <div className=\"align-vertically\">\r\n                    <img alt=\"لوگو شرکت ترازپویش\" className=\"logo-img\" src=\"/images/logo/logo.png\" />\r\n                    <div className=\"input-container\">\r\n                        <div className=\"input-side round-low round-right align-vertically\">\r\n                            <img alt=\"icon user\" src=\"/images/icons/lock.png\" />\r\n                        </div>\r\n                        <input value={this.state.userName} name=\"userName\" onChange={this.handleChange} className=\"round-low round-left\" type=\"text\" />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <div className=\"input-side round-low round-right align-vertically\">\r\n                            <img alt=\"password icon\" src=\"/images/icons/lock.png\" />\r\n                        </div>\r\n                        <input value={this.state.password} name=\"password\" onChange={this.handleChange} className=\"round-low round-left\" type=\"password\" />\r\n                    </div>\r\n                    <div className=\"input-container margin-top-low\">\r\n                        <input checked={this.state.rememberMe} name=\"rememberMe\" onChange={this.handleChange} id=\"rememberMe\" type=\"checkbox\" />\r\n                        <label htmlFor=\"rememberMe\">رمز عبور مرا به خاطر بسپار</label>\r\n                    </div>\r\n                    <div className=\"full z11\">\r\n                        <Link to={{ pathname: \"/signup\", type: RegistrationTypes.passwordRecoveryMode }}>\r\n                            <label className=\"right forgetPass\">بازیابی رمز عبور</label>\r\n                        </Link>\r\n                        <div className=\"left login-button-container\">\r\n                            <div onClick={this.handleSubmit} className=\"right button button-accent round-circle-right button-side\">\r\n                                <img alt=\"icon left arrow\" src=\"/images/icons/ic-left-arrow.png\" />\r\n                            </div>\r\n                            <input defaultValue=\"ورود\" onClick={this.handleSubmit} type=\"button\" className=\"left button button-accent round-circle-left login-button\" />\r\n                        </div>\r\n                    </div>\r\n                    {this.props.message.messageShowFirst && <Message message={this.props.message.message} display={this.props.message.messageShow ? \"show\" : \"hide\"} type={this.props.message.messageType} />}\r\n                    <div className=\"fix-bottom full\">\r\n                        <Link to={{ pathname: \"/signup\", type: RegistrationTypes.registerMode }}>\r\n                            <div  className=\"register-button-container\">\r\n                                <input defaultValue=\"ثبت نام\" type=\"button\" className=\"button button-accent register-button\" />\r\n                                <img alt=\"icon check\" src=\"/images/icons/ic-check.png\" />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onSignIn: credential => {\r\n            dispatch(signIn(credential))\r\n        },\r\n        onSetMessage: (MessageState) => {\r\n            dispatch(setMessage(MessageState))\r\n        },\r\n        onShowMessage: (MessageState) => {\r\n            dispatch(showMessage(MessageState))\r\n        },\r\n        onHideMessage: () => {\r\n            dispatch(hideMessage())\r\n        },\r\n        onKillMessage: () => {\r\n            dispatch(killMessage())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    message: state.message\r\n})\r\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn)","import { PostData } from '../../services/Services'\r\nimport { SEND_CODE_ROUTE, LOGIN_ROUTE, CHECK_MOBILE_ROUTE, SERVER_CONNECTION_FAILUR_MESSAGE } from '../../utilities/Statics';\r\nimport { AUTH_SIGNIN_SUCCESS, AUTH_SIGNIN_FAILURE, ResponseCode } from '../../utilities/types'\r\nimport { setLoading } from './loadingActions';\r\nimport { showMessage } from './messageActions';\r\nimport md5 from 'md5-hash'\r\nimport { setData } from '../../services/Services';\r\n\r\nexport const signIn = (credentials) => {\r\n    return dispatch => {\r\n        const history = credentials.history\r\n        dispatch(setLoading({ loading: true }))\r\n        const md5Password = md5(credentials.password)\r\n        PostData(LOGIN_ROUTE, { \"UserName\": credentials.userName, \"Password\": md5Password })\r\n            .then(Response => {\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setLoading({ loading: false }))\r\n                    console.log(Response.UserInfo)\r\n                    setData(Response.UserInfo)\r\n                    dispatch(showMessage({ message: \"ورود با موفقیت انجام شد\", messageType: \"success\" }))\r\n                    setTimeout(() => {\r\n                        history.replace(\"/\")\r\n                    }, 2000)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                    dispatch(setLoading({ loading: false }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const checkMobile = (params) => {\r\n    return dispatch => {\r\n        const history = params.history\r\n        //show loading\r\n        dispatch(setLoading({ loading: true }))\r\n        console.log(params)\r\n        PostData(CHECK_MOBILE_ROUTE, { \"MobileNo\": params.MobileNo, \"Type\": params.Type })\r\n            .then(Response => {\r\n                //hide loading\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    history.push({pathname:\"/register\",type:params.Type,mobileNumber:params.MobileNo})\r\n                }\r\n                else {\r\n                    //set message to show\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                //set message to show\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const validateSecurityCode = (params) => {\r\n    return dispatch => {\r\n        const history = params.history\r\n        //show loading\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(SEND_CODE_ROUTE, { \"MobileNo\": params.MobileNo, \"Type\": params.Type, \"Value\": params.Value })\r\n            .then(Response => {\r\n                //hide loading\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"success\" }))\r\n                    setTimeout(() => {\r\n                        history.replace(\"/signin\")\r\n                    }, 2000)\r\n                }\r\n                else {\r\n                    //set message to show\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                //set message to show\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { checkMobile } from '../../store/actions/authActions';\r\nimport { showMessage, hideMessage,killMessage } from '../../store/actions/messageActions';\r\nimport { goToLogin } from '../../services/Services';\r\nimport Message from '../layout/Message'\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mobileNumber: \"\"\r\n    }\r\n    this.props.onKillMessage()\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    if (type === \"checkbox\") {\r\n      this.setState({ [name]: checked })\r\n    }\r\n    else {\r\n      this.setState({ [name]: value })\r\n    }\r\n  }\r\n  handleSubmit = (event) => {\r\n    const mobileNumber=this.state.mobileNumber\r\n    if (mobileNumber === \"\") {\r\n      this.props.onShowMessage({ message: \"شماره موبایل را وارد کنید!\", messageType: \"warning\" })\r\n      return\r\n    }\r\n    else {\r\n      this.props.onHideMessage()\r\n    }\r\n    \r\n    this.props.onCheckMobile({MobileNo:mobileNumber,Type:this.props.location.type,history:this.props.history})\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"align-vertically\">\r\n          <img  alt=\"\" className=\"logo-img\" src=\"/images/logo/logo.png\" />\r\n          <div className=\"input-container\" style={{ height: \"auto\" }}>\r\n            <div className=\"register-input-container\">\r\n              <div>\r\n                <img  alt=\"\" src=\"/images/icons/phone.png\" />\r\n              </div>\r\n              <input placeholder=\"شماره موبایل\"  name=\"mobileNumber\" onChange={this.handleChange} type=\"text\" />\r\n            </div>\r\n            <input onClick={this.handleSubmit} defaultValue=\"ادامه\" type=\"button\" className=\"button-accent register-input-container \" />\r\n          </div>\r\n          {this.props.message.messageShowFirst && <Message message={this.props.message.message} display={this.props.message.messageShow ? \"show\" : \"hide\"} type={this.props.message.messageType} />}\r\n          <div className=\"fix-bottom full\">\r\n            <div onClick={(this.props.history.goBack)} className=\"register-button-container\">\r\n              <input defaultValue=\"ورود\" type=\"button\" className=\"button button-primary register-button register-button\" />\r\n              <img  alt=\"\" src=\"/images/icons/ic-arrow-right.png\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    onCheckMobile: params => {\r\n      dispatch(checkMobile(params))\r\n    },\r\n    onShowMessage: (MessageState) => {\r\n      dispatch(showMessage(MessageState))\r\n    },\r\n    onHideMessage: () => {\r\n      dispatch(hideMessage())\r\n    },\r\n    onKillMessage: () => {\r\n      dispatch(killMessage())\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  message: state.message\r\n})\r\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn)","//use for registration or recovery password , if type==1 register else recover password\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { validateSecurityCode } from '../../store/actions/authActions';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport { RegistrationTypes } from '../../utilities/types'\r\nimport Message from '../layout/Message'\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      securityCode: \"\"\r\n    }\r\n    this.props.onKillMessage()\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    if (type === \"checkbox\") {\r\n      this.setState({ [name]: checked })\r\n    }\r\n    else {\r\n      this.setState({ [name]: value })\r\n    }\r\n  }\r\n  handleSubmit = (event) => {\r\n    const securityCode = this.state.securityCode\r\n    if (securityCode === \"\" || securityCode.length !== 5) {\r\n      this.props.onShowMessage({ message: \"کد امنیتی را به درستی وارد کنید!\", messageType: \"warning\" })\r\n      return\r\n    }\r\n    else {\r\n      this.props.onHideMessage()\r\n    }\r\n    this.props.onValidateSecurityCode({ MobileNo: this.props.location.mobileNumber, Value: securityCode, Type: this.props.location.type, history: this.props.history })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"align-vertically\">\r\n          <img alt=\"\" className=\"logo-img\" src=\"/images/logo/logo.png\" />\r\n          <div className=\"input-container\" style={{ height: \"auto\" }}>\r\n            <div className=\"register-input-container\">\r\n              <div>\r\n                <img alt=\"\" src=\"/images/icons/phone.png\" />\r\n              </div>\r\n              <input placeholder=\"کد امنیتی پنج رقمی\" name=\"securityCode\" onChange={this.handleChange} type=\"text\" />\r\n            </div>\r\n            <input onClick={this.handleSubmit} defaultValue=\"تایید\" type=\"button\" className=\"button-accent register-input-container \" />\r\n          </div>\r\n          {this.props.message.messageShowFirst && <Message message={this.props.message.message} display={this.props.message.messageShow ? \"show\" : \"hide\"} type={this.props.message.messageType} />}\r\n          <div className=\"fix-bottom full\">\r\n            <div onClick={this.props.history.goBack} className=\"register-button-container\">\r\n              <input defaultValue=\"ورود\" type=\"button\" className=\"button button-primary register-button register-button\" />\r\n              <img alt=\"\" src=\"/images/icons/ic-arrow-right.png\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    onValidateSecurityCode: params => {\r\n      dispatch(validateSecurityCode(params))\r\n    },\r\n    onShowMessage: (MessageState) => {\r\n      dispatch(showMessage(MessageState))\r\n    },\r\n    onHideMessage: () => {\r\n      dispatch(hideMessage())\r\n    },\r\n    onKillMessage: () => {\r\n      dispatch(killMessage())\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  message: state.message\r\n})\r\nexport default connect(mapStateToProps, mapActionsToProps)(Register)","import React, { Component } from 'react'\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{color:\"#fff\",background:\"#000a\",width:'100%',height:'100%',zIndex:'1000',opacity:'1',position:'fixed',top:0}}>\r\n                <div style={{width:\"100%\",height:\"100%\",position:\"relative\"}}>\r\n                    <div style={{width:\"300px\",position:\"absolute\",top:\"50%\",left:\"50%\",transform:\"translate(-50%,-50%)\",textAlign:\"right\",direction:\"rtl\",background:\"#2b2b2b\",padding:\"20px\"}}>\r\n                        <label>{this.props.loadingTitle}</label><br/>\r\n                        <label>{this.props.loadingMessage}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React, { Component } from 'react'\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { Link } from 'react-router-dom'\r\nimport { APP_CARTABLE_ROUTE, APP_REPORT_ROUTE } from '../../utilities/Statics';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super()\r\n        const key = getData(\"Key\")\r\n        console.log(key)\r\n        if (!key) {\r\n            goToLogin(props.history)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main-content-center-container\">\r\n                <img className=\"main-circut main-circut-right\" alt=\"\" src=\"/images/icons/main-right-circut.png\" />\r\n                <img className=\"main-circut main-circut-left\" alt=\"\" src=\"/images/icons/main-left-circut.png\" />\r\n                <div className=\"main-content-center\">\r\n                    <div className=\"top-content\">\r\n                        <div id=\"sss\" className=\"main-item main-item-left\">\r\n                            <div className=\"main-item-inner-container\">\r\n                                <div className=\"main-item-inner\">\r\n                                    <img alt=\"\" src=\"/images/icons/moshtarian.png\" />\r\n                                </div>\r\n                            </div>\r\n                            <label>مشتریان</label>\r\n                        </div>\r\n                        <Link to={APP_CARTABLE_ROUTE + \"/main/کارتابل\"}>\r\n                            <div className=\"main-item main-item-middle\">\r\n                                <div className=\"main-item-inner-container\">\r\n                                    <div className=\"main-item-inner\">\r\n                                        <img alt=\"\" src=\"/images/icons/kartabl.png\" />\r\n                                    </div>\r\n                                </div>\r\n                                <label>کارتابل</label>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={APP_REPORT_ROUTE + \"/main/گزارش ها\"}>\r\n                            <div className=\"main-item main-item-right\">\r\n                                <div className=\"main-item-inner-container\">\r\n                                    <div className=\"main-item-inner\">\r\n                                        <img alt=\"\" src=\"/images/icons/gozaresh.png\" />\r\n                                    </div>\r\n                                </div>\r\n                                <label>گزارش ها</label>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"bottom-content\">\r\n                        <div className=\"small-left-circle \" />\r\n                        <div className=\"small-right-circle\" />\r\n                        <div className=\"main-item main-item-right-high\">\r\n                            <div className=\"main-item-inner-container\">\r\n                                <div className=\"main-item-inner\">\r\n                                    <img alt=\"\" src=\"/images/icons/roydadha.png\" />\r\n                                </div>\r\n                            </div>\r\n                            <label>رویدادها</label>\r\n                        </div>\r\n                        <div className=\"main-item main-item-left-high\">\r\n                            <div className=\"main-item-inner-container\">\r\n                                <div className=\"main-item-inner\">\r\n                                    <img alt=\"\" src=\"/images/icons/1.png\" />\r\n                                </div>\r\n                            </div>\r\n                            <label>تبلیغات</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import { PostData, goToLogin } from '../../services/Services'\r\nimport { SERVER_CONNECTION_FAILUR_MESSAGE, GET_CARTABLE_MENU_ROUTE, GET_UNCOMFIRMED_DETAIL_REQUESTS_ROUTE, COMFIRM_REQUESTS_ROUTE,COMFIRM_DETAIL_REQUESTS_ROUTE,GET_UNCOMFIRMED_REQUESTS_ROUTE } from '../../utilities/Statics';\r\nimport { CARTABLE_GET_SUCCESS, ResponseCode, UNCOMFIRMED_REQUESTS_GET_SUCCESS,UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS, SET_SELECTED_UNCOMFIRMED_REQUEST,SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST,SET_COMFIRMED_DETAIL_REQUEST, SET_COMFIRMED_REQUEST } from '../../utilities/types'\r\nimport { setLoading } from './loadingActions';\r\nimport { showMessage } from './messageActions';\r\n\r\nexport const GetCartable = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(GET_CARTABLE_MENU_ROUTE, { \"Parent\": params.parent }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                console.log(Response)\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setCartable(Response.cartable))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setCartable = (cartable) => ({\r\n    type: CARTABLE_GET_SUCCESS,\r\n    payload: { cartable: cartable }\r\n})\r\nexport const setSelectedUnComfirmedRequest = (selectedUnComfirmedRequest) => ({\r\n    type: SET_SELECTED_UNCOMFIRMED_REQUEST,\r\n    payload: { selectedUnComfirmedRequest: selectedUnComfirmedRequest }\r\n})\r\nexport const setSelectedUnComfirmedDetailRequest = (selectedUnComfirmedDetailRequest) => ({\r\n    type: SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST,\r\n    payload: { selectedUnComfirmedDetailRequest: selectedUnComfirmedDetailRequest }\r\n})\r\nexport const GetUnComfirmedDetailRequests = (params) => {\r\n    return dispatch => {\r\n        console.log(params)\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(GET_UNCOMFIRMED_DETAIL_REQUESTS_ROUTE, { \"MenuID\": params.menuID, \"HeaderSysID\": params.headerSysID }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setUnComfirmedDetailRequests(Response.detailRows))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const GetUnComfirmedRequests = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(GET_UNCOMFIRMED_REQUESTS_ROUTE, { \"MenuID\": params.menuID }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setUnComfirmedRequests(Response.headerRows))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const ComfirmRequest = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(COMFIRM_REQUESTS_ROUTE, { \"HeaderSysID\": params.request.requestHeaderSysID }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setComfirmedRequest(params.request))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const ComfirmDetailRequest = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        const {request} = params\r\n        console.log(request)\r\n        PostData(COMFIRM_DETAIL_REQUESTS_ROUTE, { \"HeaderSysID\": request.requestHeaderSysID,\"RowNo\":request.rowNo,\"AcceptQTY\":request.acceptQty }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"success\" }))                    \r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const setUnComfirmedRequests = (unComfirmedRequests) => ({\r\n    type: UNCOMFIRMED_REQUESTS_GET_SUCCESS,\r\n    payload: { unComfirmedRequests: unComfirmedRequests }\r\n})\r\nexport const setUnComfirmedDetailRequests = (unComfirmedDetailRequests) => ({\r\n    type: UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS,\r\n    payload: { unComfirmedDetailRequests: unComfirmedDetailRequests }\r\n})\r\nexport const setComfirmedRequest = (ComfirmedRequest) => ({\r\n    type: SET_COMFIRMED_REQUEST,\r\n    payload: { comfirmedRequest: ComfirmedRequest }\r\n})\r\nexport const setComfirmedDetailRequest = (comfirmedDeatilRequest) => ({\r\n    type: SET_COMFIRMED_DETAIL_REQUEST,\r\n    payload: { comfirmedDeatilRequest: comfirmedDeatilRequest }\r\n})\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass PagesToolbar extends Component {\r\n    render() {\r\n        return (\r\n            <div  className=\"pages-toolbar\">\r\n                <img onClick={this.props.onBackClick} className=\"arrow-back\" src=\"/images/icons/ic-arrow-left-back.png\"/>\r\n                <span className=\"toolbar-title\">{this.props.title}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PagesToolbar\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GetCartable } from '../../store/actions/cartableActions';\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport { APP_CARTABLE_ROUTE,APP_UNCOMFIRMED_REQUESTS_ROUTE } from '../../utilities/Statics';\r\nimport PagesToolbar from '../layout/PagesToolbar'\r\n\r\nclass Cartable extends Component {\r\n  constructor(props) {\r\n    super()\r\n    const { id, title } = props.match.params;\r\n    const key = getData(\"Key\");\r\n    console.log(key)\r\n    if (!key) {\r\n      goToLogin(props.history)\r\n    }\r\n    props.onGetCartable({ parent: id, key: key, history: props.history })\r\n    this.state = {\r\n      title: title\r\n    }\r\n  }\r\n  getImageSource = (image) => {\r\n    let src = \"/images/icons/1.png\"\r\n    if (image !== null) {\r\n      src = \"data:image/png;base64, \" + Image\r\n    }\r\n    return src;\r\n  }\r\n  handleMenuItemClick = (item) => {\r\n    if (item.menuType === 1) {\r\n      this.props.history.push(APP_CARTABLE_ROUTE + \"/\" + item.menuID + \"/\" + item.caption)\r\n    }\r\n    else {\r\n      this.props.history.push(APP_UNCOMFIRMED_REQUESTS_ROUTE + \"/\" + item.menuID + \"/\" + item.caption)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container\">\r\n          <PagesToolbar onBackClick={this.props.history.goBack} title={this.state.title} />\r\n          <div className=\"align-vertically\">\r\n            <ul className=\"cartable-menu\">\r\n              {this.props.cartable.cartable.map((item) => (<li onClick={() => (this.handleMenuItemClick(item))} key={item.menuID}><img  alt=\"\" src={this.getImageSource(item.image)} />{item.caption}</li>))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    onShowMessage: (MessageState) => {\r\n      dispatch(showMessage(MessageState))\r\n    },\r\n    onHideMessage: () => {\r\n      dispatch(hideMessage())\r\n    },\r\n    onKillMessage: () => {\r\n      dispatch(killMessage())\r\n    },\r\n    onGetCartable: (params) => {\r\n      dispatch(GetCartable(params))\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  message: state.message,\r\n  cartable: state.cartable\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Cartable)\r\n","import { PostData, goToLogin } from '../../services/Services'\r\nimport { SERVER_CONNECTION_FAILUR_MESSAGE, GET_REPORT_MENU_ROUTE, GET_REPORT_LAYOUT_ROUTE } from '../../utilities/Statics';\r\nimport { ResponseCode, REPORT_GET_SUCCESS, REPORT_LAYOUT_GET_SUCCESS, REPORT_PARAMETER_LAYOUT_SET,REPORT_LAYOUT_CLEAR } from '../../utilities/types'\r\nimport { setLoading } from './loadingActions';\r\nimport { showMessage } from './messageActions';\r\n\r\nexport const GetReportMenu = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        PostData(GET_REPORT_MENU_ROUTE, { \"Parent\": params.parent }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setReportMenu(Response.cartable))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(() => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const GetReportLayout = (params) => {\r\n    return dispatch => {\r\n        dispatch(setLoading({ loading: true }))\r\n        dispatch(clearReportLayout())\r\n        PostData(GET_REPORT_LAYOUT_ROUTE, { \"ReportID\": params.reportID }, { \"taraz-security-key\": params.key })\r\n            .then(Response => {\r\n                dispatch(setLoading({ loading: false }))\r\n                if (Response.code === ResponseCode.Success) {\r\n                    dispatch(setReportLayout(Response.reportLayouts))\r\n                }\r\n                else if (Response.code === ResponseCode.UserIsNotValid) {\r\n                    goToLogin(params.history)\r\n                }\r\n                else {\r\n                    dispatch(showMessage({ message: Response.message, messageType: \"error\" }))\r\n                }\r\n            })\r\n            .catch(() => {\r\n                dispatch(showMessage({ message: SERVER_CONNECTION_FAILUR_MESSAGE, messageType: \"error\" }))\r\n                dispatch(setLoading({ loading: false }))\r\n            })\r\n    }\r\n}\r\nexport const setReportMenu = (reportMenu) => ({\r\n    type: REPORT_GET_SUCCESS,\r\n    payload: { reportMenu: reportMenu }\r\n})\r\nexport const clearReportLayout = () => ({\r\n    type: REPORT_LAYOUT_CLEAR,\r\n    payload: {  }\r\n})\r\nexport const setReportLayout = (reportLayouts) => ({\r\n    type: REPORT_LAYOUT_GET_SUCCESS,\r\n    payload: { reportLayouts: reportLayouts }\r\n})\r\nexport const setReportParameter = (name, value) => ({\r\n    type: REPORT_PARAMETER_LAYOUT_SET,\r\n    payload: { name: name, value: value }\r\n})\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GetReportMenu } from '../../store/actions/reportActions';\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport { APP_REPORT_ROUTE,APP_UNCOMFIRMED_REQUESTS_ROUTE,APP_REPORT_LAYOUT_ROUTE } from '../../utilities/Statics';\r\nimport PagesToolbar from '../layout/PagesToolbar'\r\n\r\nclass ReportMenu extends Component {\r\n  constructor(props) {\r\n    super()\r\n    const { id, title } = props.match.params;\r\n    const key = getData(\"Key\");\r\n    if (!key) {\r\n      goToLogin(props.history)\r\n    }\r\n    props.onGetReportMenu({ parent: id, key: key, history: props.history })\r\n    this.state = {\r\n      title: title\r\n    }\r\n  }\r\n  getImageSource = (image) => {\r\n    let src = \"/images/icons/1.png\"\r\n    if (image !== null) {\r\n      src = \"data:image/png;base64, \" + Image\r\n    }\r\n    return src;\r\n  }\r\n  handleMenuItemClick = (item) => {\r\n    if (item.menuType === 1) {\r\n      this.props.history.push(APP_REPORT_ROUTE + \"/\" + item.menuID + \"/\" + item.caption)\r\n    }\r\n    else {\r\n      this.props.history.push(APP_REPORT_LAYOUT_ROUTE + \"/\" + item.menuID + \"/\" + item.caption)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container\">\r\n          <PagesToolbar onBackClick={this.props.history.goBack} title={this.state.title} />\r\n          <div className=\"align-vertically\">\r\n            <ul className=\"cartable-menu\">\r\n              {this.props.report.reportMenu.map((item) => (<li onClick={() => (this.handleMenuItemClick(item))} key={item.menuID}><img  alt=\"\" src={this.getImageSource(item.image)} />{item.caption}</li>))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    onShowMessage: (MessageState) => {\r\n      dispatch(showMessage(MessageState))\r\n    },\r\n    onHideMessage: () => {\r\n      dispatch(hideMessage())\r\n    },\r\n    onKillMessage: () => {\r\n      dispatch(killMessage())\r\n    },\r\n    onGetReportMenu: (params) => {\r\n      dispatch(GetReportMenu(params))\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  message: state.message,\r\n  report: state.report\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReportMenu)\r\n","import React, { Component } from 'react'\r\nimport { InputType } from '../../utilities/types';\r\nimport { DatePicker } from 'react-persian-datepicker';\r\nexport class Input extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: props.value ? props.value : \"\"\r\n        }\r\n    }\r\n    handleOnChange = (event) => {\r\n        const { value,name } = event.target\r\n        this.setState({ value: value })\r\n        this.props.onChange(name,value)\r\n    }\r\n    render() {\r\n        const styles = {\r\n            calendarContainer: \"calendarContainer\",\r\n            dayPickerContainer: \"dayPickerContainer\",\r\n            monthsList: \"monthsList\",\r\n            daysOfWeek: \"daysOfWeek\",\r\n            dayWrapper: \"dayWrapper\",\r\n            selected: \"selected\",\r\n            heading: \"heading\",\r\n            next: \"next\",\r\n            prev: \"prev\",\r\n            title: \"title\",\r\n            }\r\n        const { name, type } = this.props\r\n        if (type === InputType.DateBox) {\r\n            return (\r\n                <React.Fragment>\r\n                    <DatePicker calendarStyles={ styles }  onChange={value => this.props.onChange(this.props.name,value)} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <input type={type} value={this.state.value} name={name} onChange={this.handleOnChange} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\nimport { ReportTypes } from '../../utilities/types'\r\nimport { BaseUrl } from '../../utilities/Statics'\r\nimport { getData } from '../../services/Services';\r\n\r\nexport class ChartView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showListView:false,\r\n            isListView: (props.chart.reportType === ReportTypes.ListViewChart.type),\r\n            url: this.findUrl(props.chart),\r\n            listViewChart: {\r\n                listViewChartItems: [\r\n                    {\r\n                        listViewChartItemData: [\r\n                            {\r\n                                listViewChartItemDataColumns: {\r\n                                    key: \"\",\r\n                                    value: \"\"\r\n                                },\r\n                                isShowByDefault: true,\r\n                                keySpacePercent: 0\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    findUrl = (chart) => {\r\n        let url = BaseUrl;\r\n        if (chart.reportType === ReportTypes.ColumnChart.type)\r\n            url += ReportTypes.ColumnChart.urlRoute\r\n        else if (chart.reportType === ReportTypes.PieChart.type)\r\n            url += ReportTypes.PieChart.urlRoute\r\n        else if (chart.reportType === ReportTypes.GaugeChart.type)\r\n            url += ReportTypes.GaugeChart.urlRoute\r\n        else if (chart.reportType === ReportTypes.DonutChart.type)\r\n            url += ReportTypes.DonutChart.urlRoute\r\n        else if (chart.reportType === ReportTypes.ListViewChart.type)\r\n            url += ReportTypes.ListViewChart.urlRoute\r\n        const key = getData(\"Key\");\r\n        url += `?Key=${key}&ReportLayoutID=${chart.ID}`\r\n        console.log(url)\r\n        return url\r\n    }\r\n    componentDidMount() {\r\n        \r\n        if (this.state.isListView) {\r\n            fetch(this.state.url)\r\n                .then(response => (response.json()))\r\n                .then(data => {\r\n                    console.log(\"incomponent\",this.state)\r\n                    console.log(\"incomponent\",data)\r\n                    if (data.code === 200) {\r\n                        this.setState({ listViewChart: data.listViewChart })\r\n                    }\r\n                })\r\n                .catch(error => this.setState({ error, isLoading: false }));\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.isListView) {            \r\n            return (\r\n                <div style={{background:\"#fbf\",fontSize:9,textAlign:\"right\",display:(this.state.isListView?\"block\":\"none\")}}>\r\n                    {\r\n                        this.state.listViewChart.listViewChartItems.map((listViewChartItem, index) => (\r\n                            <table style={{width:\"100%\"}} key={index}>\r\n                                <tbody>\r\n                                    <tr style={{borderBottom:\"1px solid black\",padding:\"5px 2px 5px 2px\"}}>\r\n                                        {listViewChartItem.listViewChartItemData.map((item, index2) => (\r\n                                            <td key={index2} style={{ width:item.keySpacePercent }}>\r\n                                                {item.listViewChartItemDataColumns.key} : {item.listViewChartItemDataColumns.value}\r\n                                            </td>\r\n                                        ))}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        ))\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ width: \"100%\", height: \"300px\", background: \"#eee\", marginTop: \"10px\", marginBottom: \"5px\",display:(!this.state.isListView?\"block\":\"none\") }}>\r\n                    <iframe style={{ width: \"100%\", height: \"100%\" }} src={this.state.url} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChartView\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GetReportLayout, setReportParameter } from '../../store/actions/reportActions';\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport { APP_REPORT_ROUTE, APP_UNCOMFIRMED_REQUESTS_ROUTE } from '../../utilities/Statics';\r\nimport PagesToolbar from '../layout/PagesToolbar'\r\nimport { Input } from '../layout/Input'\r\nimport { ChartView } from \"../layout/ChartView\"\r\n\r\nclass ReportLayout extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { id, title } = props.match.params;\r\n    const key = getData(\"Key\");\r\n    if (!key) {\r\n      goToLogin(props.history)\r\n    }\r\n    props.onGetReportLayout({ reportID: id, key: key, history: props.history })\r\n    this.state = {\r\n      title: title,\r\n    }\r\n  }\r\n\r\n  handleOnParameterChange(name, value) {\r\n    this.props.onSetReportParameter(name, value)\r\n  }\r\n  render() {\r\n    console.log(this.props.report.reportLayouts[0].reportCharts)\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main-container-pages\">\r\n          <PagesToolbar onBackClick={this.props.history.goBack} title={this.state.title} />\r\n          <div className=\"align-vertically\">\r\n            <ul className=\"cartable-menu\">\r\n              {this.props.report.reportLayouts[0].reportParameters.map((item) => (<li key={item.name}><Input name={item.name} value={item.defaultValue}\r\n                type={item.reportParameterType} onChange={this.handleOnParameterChange.bind(this)} /> </li>))}\r\n            </ul>\r\n            <div>\r\n              <input type=\"button\" className=\"button button-primary round-high right\" value=\"به روز رسانی اطلاعات\" />\r\n              <input type=\"button\" className=\"button button-accent round-high left\" value=\"به روز رسانی نمودار ها\" />\r\n            </div>\r\n            <div style={{ padding: \"10px 0 60px 0\",width:\"100%\" }}>\r\n              {this.props.report.reportLayouts[0].reportCharts.map((chart, index) => (\r\n                <ChartView key={index} chart={chart} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    onShowMessage: (MessageState) => {\r\n      dispatch(showMessage(MessageState))\r\n    },\r\n    onHideMessage: () => {\r\n      dispatch(hideMessage())\r\n    },\r\n    onKillMessage: () => {\r\n      dispatch(killMessage())\r\n    },\r\n    onGetReportLayout: (params) => {\r\n      dispatch(GetReportLayout(params))\r\n    },\r\n    onSetReportParameter: (name, value) => {\r\n      dispatch(setReportParameter(name, value))\r\n    },\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  message: state.message,\r\n  report: state.report\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ReportLayout)\r\n","import { MESSAGE_MODAL_SET } from '../../utilities/types'\r\n\r\nexport const setMessageModal = (loadingState) => ({\r\n    type: MESSAGE_MODAL_SET,\r\n    payload: {...loadingState}\r\n})\r\nexport const hideMessageModal = () => ({\r\n    type: MESSAGE_MODAL_SET,\r\n    payload: { display: \"hide\" }\r\n})\r\nexport const killMessageModal = () => ({\r\n    type: MESSAGE_MODAL_SET,\r\n    payload: { display: \"hide\", messageModal:false }\r\n})\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMessageModal } from '../../store/actions/messageModalActions';\r\nimport { setSelectedUnComfirmedRequest } from '../../store/actions/cartableActions';\r\nimport { APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE } from '../../utilities/Statics';\r\n\r\n\r\nclass UnComfirmedRequest extends Component {\r\n    render() {\r\n        const { requestHeaderSysID, docNumber, docDate, createDate, qty, price, creatorName } = this.props.item\r\n        const { id } = this.props\r\n        const onDetailClicked = () => {\r\n            const title=\"جزئیات درخواست شماره \"+docNumber\r\n            this.props.history.push(`${APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE}/${id}/${title}/${requestHeaderSysID}`)\r\n        }\r\n        const onComfirmClicked = () => {\r\n            this.props.onSetSelectedUnComfirmedRequest({ index: this.props.index, ...this.props.item })\r\n            this.props.onSetMessageModal({ messageModal: true, display: \"show\", type: \"success\", position: \"fixed-bottom\", message: \"آیا مطمن هستید؟\" });\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"full-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>شماره سند : <span> {docNumber}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>تاریخ سند :\r\n                        <span> {docDate}</span>\r\n                            </td>\r\n                            <td>تاریخ ایجاد :\r\n                        <span> {createDate}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>مقدار :\r\n                        <span> {qty}</span>\r\n                            </td>\r\n                            <td>مبلغ :\r\n                        <span> {price}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ایجاد کننده :\r\n                        <span> {creatorName}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"button-container-pages\">\r\n                    <input type=\"button\" onClick={() => (onDetailClicked())} className=\"button-pages button button-primary round-high right\" value=\"جزییات\" />\r\n                    <input type=\"button\" onClick={() => (onComfirmClicked())} className=\"button-pages button button-accent round-high left\" value=\"تایید\" />\r\n                </div>\r\n                <hr style={{ width: \"100%\" }} />\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onSetMessageModal: (ModalState) => {\r\n            dispatch(setMessageModal(ModalState))\r\n        },\r\n        onSetSelectedUnComfirmedRequest: (selectedUnComfirmedRequest) => {\r\n            dispatch(setSelectedUnComfirmedRequest(selectedUnComfirmedRequest))\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    message: state.message,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(UnComfirmedRequest)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { hideMessageModal, killMessageModal } from '../../store/actions/messageModalActions';\r\n\r\nclass ModalMessage extends Component {\r\n    handleCloseButtonClick = () => {\r\n        this.props.onHideMessageModal()\r\n        setTimeout(() => {\r\n            this.props.onKillMessageModal()\r\n        }, 800);\r\n    }\r\n    onYesClicked = () => {\r\n        this.props.onYesClick()\r\n        this.handleCloseButtonClick()\r\n    }\r\n    onNoClicked = () => {\r\n        if (this.props.onNoClick) {\r\n            this.props.onNoClick()\r\n        }\r\n        this.handleCloseButtonClick()\r\n    }\r\n    render() {\r\n        const modal = this.props.messageModal\r\n        if (!modal.messageModal) return null\r\n        const { type, message, display, position } = this.props.messageModal\r\n        const typeClassName = \"modal-message-content-\" + type\r\n        const modalDisplayClassName = \"modal-message-\" + display\r\n        const modalContentDisplayClassName = \"modal-message-content-\" + display\r\n        const modalContentPosition = \"modal-message-content-\" + position\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`modal-message ${modalDisplayClassName}`}>\r\n                    <div className={`modal-message-content ${typeClassName} ${modalContentDisplayClassName} ${modalContentPosition}`} >\r\n                        <img onClick={this.handleCloseButtonClick} className=\"modal-close-img\" src=\"/images/icons/ic-close.png\" />\r\n                        <span className=\"modal-message-text\">{message}</span>\r\n                        <div className=\"button-container-pages\" style={{ position: \"absolute\", bottom: \"10px\" }}>\r\n                            <input type=\"button\" onClick={this.onNoClicked} className=\"button-pages button button-primary round-high right\" value=\"خیر\" />\r\n                            <input type=\"button\" onClick={this.onYesClicked} className=\"button-pages button button-accent round-high left\" value=\"بلی\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onHideMessageModal: () => {\r\n            dispatch(hideMessageModal())\r\n        },\r\n        onKillMessageModal: () => {\r\n            dispatch(killMessageModal())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    messageModal: state.messageModal\r\n})\r\nexport default connect(mapStateToProps, mapActionsToProps)(ModalMessage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GetUnComfirmedRequests,ComfirmRequest } from '../../store/actions/cartableActions';\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport PagesToolbar from '../layout/PagesToolbar'\r\nimport UnComfirmedRequest from '../layout/UnComfirmedRequest'\r\nimport ModalMessage from '../layout/ModalMessage'\r\nimport { hideMessageModal, killMessageModal } from '../../store/actions/messageModalActions';\r\n\r\n\r\nclass UnComfirmedRequests extends Component {\r\n    constructor(props) {\r\n        super()\r\n        const { id, title } = props.match.params;\r\n        const key = getData(\"Key\");\r\n        if (!key) {\r\n            goToLogin(props.history)\r\n        }\r\n        this.state = {\r\n            title: title\r\n        }\r\n        props.onGetUnComfirmedRequests({ menuID: id, key: key, history: props.history })\r\n    }\r\n    onYesClicked = () => {\r\n        console.log(this.props.unComfirmedRequests)\r\n        const key = getData(\"Key\");\r\n        const request =this.props.unComfirmedRequests.selectedUnComfirmedRequest\r\n        this.props.onComfirmRequest({request:request,key:key,history:this.props.history})\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ModalMessage onYesClick={this.onYesClicked.bind(this)}/>\r\n                <div className=\"main-container-pages\">\r\n                    <PagesToolbar onBackClick={this.props.history.goBack} title={this.state.title} />\r\n                    <div className=\"align-vertically\">\r\n                        {this.props.unComfirmedRequests.unComfirmedRequests.map((item, index) => (<UnComfirmedRequest history={this.props.history} key={index} index={index} id={this.props.match.params.id} item={item} />))}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onShowMessage: (MessageState) => {\r\n            dispatch(showMessage(MessageState))\r\n        },\r\n        onHideMessage: () => {\r\n            dispatch(hideMessage())\r\n        },\r\n        onKillMessage: () => {\r\n            dispatch(killMessage())\r\n        },\r\n        onGetUnComfirmedRequests: (params) => {\r\n            dispatch(GetUnComfirmedRequests(params))\r\n        },\r\n        onComfirmRequest: (params) => {\r\n            dispatch(ComfirmRequest(params))\r\n        },\r\n        onHideMessageModal: () => {\r\n            dispatch(hideMessageModal())\r\n        },\r\n        onKillMessageModal: () => {\r\n            dispatch(killMessageModal())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    message: state.message,\r\n    unComfirmedRequests: state.cartable\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(UnComfirmedRequests)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setMessageModal } from '../../store/actions/messageModalActions';\r\nimport { setSelectedUnComfirmedDetailRequest } from '../../store/actions/cartableActions';\r\n\r\n\r\nclass UnComfirmedRequest extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const { acceptQty } = this.props.item\r\n        this.state = {\r\n            acceptQty: acceptQty\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target;\r\n        if (type === \"checkbox\") {\r\n            this.setState({ [name]: checked })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value })\r\n        }\r\n    }\r\n    render() {\r\n        const { rowNo, item, sysQty, price, itemName } = this.props.item\r\n        const onComfirmClicked = () => {\r\n            let item = this.props.item;\r\n            item.acceptQty = this.state.acceptQty\r\n            this.props.onSetSelectedUnComfirmedDetailRequest({ index: this.props.index, ...item })\r\n            this.props.onSetMessageModal({ messageModal: true, display: \"show\", type: \"success\", position: \"fixed-bottom\", message: `آیا مطمن هستید به تعداد ${this.state.acceptQty} تایید کنید؟` });\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"full-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ردیف : <span> {rowNo}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>بارکد : <span> {item}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>نام کالا : <span> {itemName}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>مقدار : <span> {sysQty}</span></td>\r\n                            <td>مقدار تایید شده : <input style={{ width: \"50px\" }} name=\"acceptQty\" onChange={this.handleChange} type=\"text\" value={this.state.acceptQty} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>مبلغ : <span> {price}</span></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"button-container-pages\">\r\n                    <input type=\"button\" onClick={() => (onComfirmClicked())} className=\"button-pages button button-accent round-high left\" value=\"تایید\" />\r\n                </div>\r\n                <hr style={{ width: \"100%\" }} />\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onSetMessageModal: (ModalState) => {\r\n            dispatch(setMessageModal(ModalState))\r\n        },\r\n        onSetSelectedUnComfirmedDetailRequest: (selectedUnComfirmedRequest) => {\r\n            dispatch(setSelectedUnComfirmedDetailRequest(selectedUnComfirmedRequest))\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    message: state.message,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(UnComfirmedRequest)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GetUnComfirmedDetailRequests, ComfirmDetailRequest } from '../../store/actions/cartableActions';\r\nimport { getData, goToLogin } from '../../services/Services';\r\nimport { showMessage, hideMessage, killMessage } from '../../store/actions/messageActions';\r\nimport PagesToolbar from '../layout/PagesToolbar'\r\nimport UnComfirmedDetailRequest from '../layout/UnComfirmedDetailRequest'\r\nimport ModalMessage from '../layout/ModalMessage'\r\nimport { hideMessageModal, killMessageModal } from '../../store/actions/messageModalActions';\r\n\r\n\r\nclass UnComfirmedDetailRequests extends Component {\r\n    constructor(props) {\r\n        super()\r\n        const { id, headerSysID, title } = props.match.params;\r\n        const key = getData(\"Key\");\r\n        if (!key) {\r\n            goToLogin(props.history)\r\n        }\r\n        this.state = {\r\n            title: title\r\n        }\r\n\r\n        props.onGetUnComfirmedDetailRequests({ menuID: id, key: key, headerSysID: headerSysID, history: props.history })\r\n    }\r\n    onYesClicked = () => {\r\n        const key = getData(\"Key\");\r\n        const { headerSysID } = this.props.match.params;\r\n        const request = { ...this.props.cartable.selectedUnComfirmedDetailRequest, requestHeaderSysID: headerSysID }\r\n        console.log(request)\r\n        this.props.onComfirmDetailRequest({ request: request, key: key, history: this.props.history })\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ModalMessage onYesClick={this.onYesClicked.bind(this)} />\r\n                <div className=\"main-container-pages\">\r\n                    <PagesToolbar onBackClick={this.props.history.goBack} title={this.state.title} />\r\n                    <div className=\"align-vertically\">\r\n                        {this.props.cartable.unComfirmedDetailRequests.map((item, index) => (<UnComfirmedDetailRequest key={index} index={index} item={item} id={this.props.match.params.id} />))}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        onShowMessage: (MessageState) => {\r\n            dispatch(showMessage(MessageState))\r\n        },\r\n        onHideMessage: () => {\r\n            dispatch(hideMessage())\r\n        },\r\n        onKillMessage: () => {\r\n            dispatch(killMessage())\r\n        },\r\n        onGetUnComfirmedDetailRequests: (params) => {\r\n            dispatch(GetUnComfirmedDetailRequests(params))\r\n        },\r\n        onComfirmDetailRequest: (params) => {\r\n            dispatch(ComfirmDetailRequest(params))\r\n        },\r\n        onHideMessageModal: () => {\r\n            dispatch(hideMessageModal())\r\n        },\r\n        onKillMessageModal: () => {\r\n            dispatch(killMessageModal())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    message: state.message,\r\n    cartable: state.cartable\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(UnComfirmedDetailRequests)\r\n","import React from 'react';\nimport './css/style.css';\nimport { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport {APP_UNCOMFIRMED_REQUESTS_ROUTE,APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE, APP_MAIN_ROUTE, APP_SIGNIN_ROUTE, APP_SIGNUP_ROUTE,\n   APP_REGISTER_ROUTE, APP_CARTABLE_ROUTE ,APP_REPORT_ROUTE,APP_REPORT_LAYOUT_ROUTE} from './utilities/Statics';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Register from './components/auth/Register'\nimport Loading from './components/layout/Loading'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Cartable from './components/cartable/Cartable'\nimport ReportMenu from './components/report/ReportMenu'\nimport ReportLayout from './components/report/ReportLayout'\nimport UnComfirmedRequests from './components/cartable/UnComfirmedRequests'\nimport UnComfirmedDetailRequests from './components/cartable/UnComfirmedDetailRequests'\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route render={({ location }) => {\n          return (\n            <React.Fragment>\n              {this.props.loading.loading && <Loading loadingMessage={this.props.loading.loadingMessage} loadingTitle={this.props.loading.loadingTitle} />}\n              <TransitionGroup style={{ height: \"100%\" }}>\n                <CSSTransition\n                  timeout={250}\n                  classNames=\"to-right\"\n                  key={location.key}\n                >\n                  <Switch location={location}>\n                    <Route exact path={APP_MAIN_ROUTE} component={Dashboard} />\n                    <Route path={APP_SIGNIN_ROUTE} component={SignIn} />\n                    <Route path={APP_SIGNUP_ROUTE} component={SignUp} />\n                    <Route path={APP_REGISTER_ROUTE} component={Register} />\n                    <Route path={APP_CARTABLE_ROUTE + \"/:id/:title\"} component={Cartable} />\n                    <Route path={APP_UNCOMFIRMED_REQUESTS_ROUTE + \"/:id/:title\"} component={UnComfirmedRequests} />\n                    <Route path={APP_UNCOMFIRMED_REQUEST_DETAIL_ROUTE + \"/:id/:title/:headerSysID\"} component={UnComfirmedDetailRequests} />\n                    <Route path={APP_REPORT_ROUTE + \"/:id/:title\"} component={ReportMenu} />\n                    <Route path={APP_REPORT_LAYOUT_ROUTE + \"/:id/:title\"} component={ReportLayout} />\n                  </Switch>\n                </CSSTransition>\n              </TransitionGroup>\n            </React.Fragment>\n          )\n        }} />\n      </Router>\n\n    )\n  }\n\n}\nconst mapStateToProps = (state) => ({\n  loading: state.loading,\n  messageModal:state.messageModal\n})\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CARTABLE_GET_SUCCESS,UNCOMFIRMED_REQUESTS_GET_SUCCESS } from '../../utilities/types'\r\nconst initState = {\r\n    cartable:[]\r\n}\r\nconst authReducer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case CARTABLE_GET_SUCCESS:\r\n            newState.cartable = payload.cartable\r\n            return newState      \r\n        case UNCOMFIRMED_REQUESTS_GET_SUCCESS:\r\n            newState.cartable = payload.cartable\r\n            return newState \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default authReducer","import { LOADING_DEFAULT_MESSAGE, LOADING_DEFAULT_TITLE } from '../../utilities/Statics'\r\nimport { LOADING_SET } from '../../utilities/types';\r\nconst initState = {\r\n    loading: false,\r\n    loadingMessage: LOADING_DEFAULT_MESSAGE,\r\n    loadingTitle: LOADING_DEFAULT_TITLE\r\n}\r\nconst loadingReduscer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case LOADING_SET:\r\n            if (\"loading\" in payload)\r\n                newState.loading = payload.loading\r\n\r\n            if (\"loadingMessage\" in payload)\r\n                newState.loadingMessage = payload.loadingMessage\r\n\r\n            if (\"loadingTitle\" in payload)\r\n                newState.loadingTitle = payload.loadingTitle\r\n\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default loadingReduscer","import { MESSAGE_SET } from '../../utilities/types';\r\nconst initState = {\r\n    messageShowFirst: false,\r\n    messageShow: false,\r\n    message: \"سلام دنیا\",\r\n    messageType: \"error\",\r\n    \r\n}\r\nconst messageReduscer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case MESSAGE_SET:\r\n            if (\"messageShowFirst\" in payload)\r\n                newState.messageShowFirst = payload.messageShowFirst\r\n\r\n            if (\"messageShow\" in payload)\r\n                newState.messageShow = payload.messageShow\r\n\r\n            if (\"message\" in payload)\r\n                newState.message = payload.message\r\n\r\n            if (\"messageType\" in payload)\r\n                newState.messageType = payload.messageType\r\n\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default messageReduscer","import { LOADING_DEFAULT_MESSAGE, LOADING_DEFAULT_TITLE } from '../../utilities/Statics'\r\nimport { MESSAGE_MODAL_SET } from '../../utilities/types';\r\nconst initState = {\r\n    messageModal:false,\r\n    display:\"hide\",\r\n    type:\"success\",\r\n    position:\"fixed-bottom\",\r\n    message:\"hello meesage modal\"\r\n}\r\nconst messageModalReduscer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case MESSAGE_MODAL_SET:\r\n            if (\"display\" in payload)\r\n                newState.display = payload.display\r\n            if (\"type\" in payload)\r\n                newState.type = payload.type\r\n            if (\"position\" in payload)\r\n                newState.position = payload.position\r\n            if (\"message\" in payload)\r\n                newState.message = payload.message\r\n            if (\"messageModal\" in payload)\r\n                newState.messageModal = payload.messageModal\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default messageModalReduscer","import { CARTABLE_GET_SUCCESS, UNCOMFIRMED_REQUESTS_GET_SUCCESS, SET_SELECTED_UNCOMFIRMED_REQUEST,SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST, SET_COMFIRMED_REQUEST, UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS } from '../../utilities/types'\r\nconst initState = {\r\n    cartable: [],\r\n    unComfirmedRequests: [],\r\n    unComfirmedDetailRequests: [],\r\n    selectedUnComfirmedRequest: {},\r\n    selectedUnComfirmedDetailRequest: {},\r\n\r\n}\r\nconst cartableReducer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case CARTABLE_GET_SUCCESS:\r\n            newState.cartable = payload.cartable\r\n            return newState\r\n        case UNCOMFIRMED_REQUESTS_GET_SUCCESS:\r\n            newState.unComfirmedRequests = payload.unComfirmedRequests\r\n            return newState\r\n        case UNCOMFIRMED_DETAIL_REQUESTS_GET_SUCCESS:\r\n            newState.unComfirmedDetailRequests = payload.unComfirmedDetailRequests\r\n            return newState\r\n        case SET_SELECTED_UNCOMFIRMED_REQUEST:\r\n            newState.selectedUnComfirmedRequest = payload.selectedUnComfirmedRequest\r\n            return newState\r\n        case SET_SELECTED_UNCOMFIRMED_DETAIL_REQUEST:\r\n            newState.selectedUnComfirmedDetailRequest = payload.selectedUnComfirmedDetailRequest\r\n            return newState\r\n        case SET_COMFIRMED_REQUEST:\r\n            newState.unComfirmedRequests.splice(payload.index, 1)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default cartableReducer","import { REPORT_GET_SUCCESS, REPORT_LAYOUT_GET_SUCCESS, REPORT_PARAMETER_LAYOUT_SET,REPORT_LAYOUT_CLEAR } from '../../utilities/types'\r\nconst initState = {\r\n    reportMenu: [],\r\n    reportLayouts: [{\r\n        reportCharts: [],\r\n        reportParameters: [],\r\n        hasListView: false\r\n    }]\r\n}\r\nconst cartableReducer = (state = initState, { type, payload }) => {\r\n    let newState = { ...state }\r\n    switch (type) {\r\n        case REPORT_GET_SUCCESS:\r\n            newState.reportMenu = payload.reportMenu\r\n            return newState\r\n        case REPORT_LAYOUT_GET_SUCCESS:\r\n            newState.reportLayouts = payload.reportLayouts\r\n            return newState\r\n        case REPORT_LAYOUT_CLEAR:\r\n            newState.reportLayouts = [{\r\n                reportCharts: [],\r\n                reportParameters: [],\r\n                hasListView: false\r\n            }]\r\n            return newState\r\n        case REPORT_PARAMETER_LAYOUT_SET:\r\n            console.log(payload)\r\n            let reportParameters = [];\r\n            newState.reportLayouts[0].reportParameters.map((item) => {\r\n                let itemSelected = item;\r\n                if (itemSelected.name === payload.name) {\r\n                    itemSelected.defaultValue = payload.value\r\n                }\r\n                reportParameters.push(itemSelected)\r\n            })\r\n            console.log(reportParameters)\r\n            newState.reportLayouts[0].reportParameters = reportParameters\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default cartableReducer","import authReducer from './authReducer'\r\nimport loadingReducer from './loadingReducer'\r\nimport messageReducer from './messageReducer'\r\nimport messageModalReducer from './messageModalReducer'\r\nimport cartbleReducer from './cartableReducer'\r\nimport reportReducer from './reportReducer'\r\nimport { combineReducers as combiner } from 'redux'\r\n\r\nconst rootResucer = combiner({\r\n    loading:loadingReducer,\r\n    message:messageReducer,\r\n    auth: authReducer,\r\n    cartable: cartbleReducer,\r\n    messageModal:messageModalReducer,\r\n    report:reportReducer\r\n})\r\n\r\nexport default rootResucer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer,applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}